{"version":3,"sources":["components/Layout/Layout.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/FilterContact/FilterContact.js","components/App.js","index.js"],"names":["Layout","children","className","ContactItem","nameItem","numberItem","onRemove","type","onClick","ContactList","contacts","onRemoveContact","map","id","name","number","key","INITIAL_STATE","ContactForm","state","handleChange","ev","target","value","setState","handleSubmit","preventDefault","props","onAddContact","reset","onSubmit","this","onChange","Component","FilterContact","valueFilter","onChangeFilter","App","filter","handleAddContact","contactItem","isExist","find","item","length","alert","contact","uuid","prevState","handleChangeFilter","getVisibleContacts","toLowerCase","includes","handleRemoveContact","idConact","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21f3fdc0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Layout.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Layout = ({children}) => <div className = 'Layout'>{children}</div>\r\n\r\nLayout.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n};\r\n\r\n\r\nexport default Layout;","import React from 'react';\r\nimport './ContactItem.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactItem = ({nameItem, numberItem, onRemove}) => (    \r\n    <li className='Contact-item'>\r\n        <p className='Contact-text'>{nameItem}: {numberItem}</p>\r\n        <section className='Contact-actions'>\r\n            <button type='button' className='Contact-button' onClick={onRemove}>Удалить</button>\r\n        </section>\r\n    </li>\r\n)\r\n\r\nContactItem.propTypes = {\r\n    nameItem: PropTypes.string.isRequired,\r\n    numberItem: PropTypes.string.isRequired,\r\n    onRemove: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactItem;","import React from 'react';\r\nimport ContactItem from '../ContactItem';\r\nimport './ContactList.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({contacts, onRemoveContact}) => (\r\n    <ul className = 'ContactList'>\r\n        {contacts.map(({id, name, number}) => (          \r\n            <ContactItem key = {id} nameItem = {name} numberItem = {number} onRemove={() => onRemoveContact(id)} />\r\n        ))}\r\n    </ul>  \r\n);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired            \r\n        })\r\n    ),\r\n    onRemoveContact: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ContactList;","import React, {Component} from 'react';\r\nimport './ContactForm.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst INITIAL_STATE = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n\r\nexport default class ContactForm extends Component {\r\n    static propTypes = {\r\n        onAddContact: PropTypes.func.isRequired\r\n    };\r\n\r\n    state = { ...INITIAL_STATE };\r\n\r\n    handleChange = ev => {\r\n        const { name, value } = ev.target;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleSubmit = ev => {\r\n        ev.preventDefault();\r\n        this.props.onAddContact({ ...this.state });\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <form className='ContactForm' onSubmit={this.handleSubmit}>\r\n                <label className='ContactForm-label'>\r\n                    Name\r\n                    <input \r\n                        className='ContactForm-input'\r\n                        type='text'\r\n                        name='name'\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <label className='ContactForm-label'>\r\n                    Number\r\n                    <input \r\n                        className='ContactForm-input'\r\n                        type='text'\r\n                        name='number'\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </label>\r\n                <button type='submit' className='ContactForm-button'>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        )\r\n    }    \r\n}","import React from 'react';\r\nimport './FilterContact.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FilterContact = ({valueFilter, onChangeFilter}) => (    \r\n    <label className='Filter-label'>        \r\n        Find contacts by name\r\n        <input type='text' className='Filter-input' value={valueFilter} onChange={(ev) => onChangeFilter(ev.target.value)} />\r\n    </label>\r\n)\r\n\r\nFilterContact.propTypes = {\r\n    valueFilter: PropTypes.string.isRequired,\r\n    onChangeFilter: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FilterContact;","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport Layout from './Layout';\nimport ContactList from './ContactList';\nimport ContactForm from './ContactForm';\nimport Filter from './FilterContact';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  };\n\n  handleAddContact = (contactItem) => {\n    let isExist = this.state.contacts.find(item => item.name === contactItem.name);\n\n    if(this.state.contacts.length > 0 && isExist) {\n      alert(`contact with name ${contactItem.name} is allready exist`);\n    } else {\n      const contact = {\n        id: uuid(),\n        name: contactItem.name,\n        number: contactItem.number\n      }\n      this.setState(prevState => ({contacts: [...prevState.contacts, contact]}))\n    }    \n  };\n\n  handleChangeFilter = (filter) => {\n    this.setState({filter})\n  }\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return  contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n  }\n\n  handleRemoveContact = idConact => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({id}) => id !== idConact)\n      }\n    })\n  }\n\n  render() { \n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Layout>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.handleAddContact}/>\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (<Filter valueFilter={filter} onChangeFilter={this.handleChangeFilter}/>)}        \n        {visibleContacts.length > 0 && (<ContactList contacts = {visibleContacts} onRemoveContact={this.handleRemoveContact}></ContactList>)}\n      </Layout>\n    );\n  }\n  \n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}